name: Playwright Tests with Metrics
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    env:
      GRAFANA_URL: http://grafana:3000
      METRICS_PORT: 9323
      ENV: ci
      PLAYWRIGHT_METRICS: true

    steps:
    - uses: actions/checkout@v4

    - name: Create Docker network
      run: docker network create monitoring-network

    - name: Setup Prometheus
      run: |
        mkdir -p prometheus
        cat > prometheus/prometheus.yml <<EOF
        global:
          scrape_interval: 15s
        scrape_configs:
          - job_name: 'playwright-tests'
            static_configs:
              - targets: ['localhost:9323']
        EOF
        docker run -d \
          --name prometheus \
          --network monitoring-network \
          -p 9090:9090 \
          -v ${{ github.workspace }}/prometheus:/etc/prometheus \
          prom/prometheus

    - name: Setup Grafana
      run: |
        docker run -d \
          --name grafana \
          --network monitoring-network \
          -p 3000:3000 \
          -e "GF_AUTH_ANONYMOUS_ENABLED=true" \
          -e "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin" \
          -e "GF_AUTH_API_KEY=${{ secrets.GRAFANA_API_KEY }}" \
          grafana/grafana

    - name: Configure Grafana Datasource and Dashboard
      run: |
        # Wait for Grafana to be ready
        sleep 10
        # Add Prometheus as datasource
        curl -X POST http://localhost:3000/api/datasources \
          -H "Content-Type: application/json" \
          --data-binary '{
            "name": "Prometheus",
            "type": "prometheus",
            "url": "http://prometheus:9090",
            "access": "proxy",
            "isDefault": true
          }'

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests with metrics and upload dashboard
      id: run-tests
      continue-on-error: true
      run: |
        # Start the container and keep it running
        docker run -d \
          --name test-runner \
          --network monitoring-network \
          -v ${{ github.workspace }}:/app \
          -w /app \
          -e METRICS_PORT=9323 \
          -e GRAFANA_API_KEY=${{ secrets.GRAFANA_API_KEY }} \
          -e GRAFANA_URL=${{ env.GRAFANA_URL }} \
          -e ENV=${{ env.ENV }} \
          -e PLAYWRIGHT_METRICS=${{ env.PLAYWRIGHT_METRICS }} \
          -p 9323:9323 \
          node:lts \
          tail -f /dev/null

        # Run tests
        docker exec test-runner npm install
        docker exec test-runner npx playwright install --with-deps
        docker exec test-runner npm run all:headless
        
        # Upload dashboard
        docker exec \
          -e GRAFANA_API_KEY=${{ secrets.GRAFANA_API_KEY }} \
          -e GRAFANA_URL=${{ env.GRAFANA_URL }} \
          test-runner \
          npm run upload-dashboard

        # Stop the container
        docker stop test-runner
        docker rm test-runner
      
    - name: Check Prometheus targets
      if: always()
      run: curl -s http://localhost:9090/api/v1/targets | jq .
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          my-report/
          playwright-report/
          test-results/
        retention-days: 1

    - name: Check test results
      if: steps.run-tests.outcome == 'failure'
      run: exit 1
